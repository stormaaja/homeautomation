name: Release New data-store Version
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  new_version_release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    permissions: 
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Bump Data Store Version
      working-directory: ./
      run: scripts/version_bump.bash data-store
    
    - name: Set up SSH
      id: setup_ssh
      working-directory: ./
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.ACTIONS_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        git config --global url."git@github.com:".insteadOf "https://github.com/"

    - name: Push Data Store Version
      id: push_step
      working-directory: ./data-store
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        version_str=$(perl -nle 'print $1 if /Version = "([^"]+)"/' "version.go")
        git add version.go
        git commit -m "[automatic] Data-Store Version ${version_str}"
        git tag -a -m "[automatic] data-store version ${version_str}" "data-store/v${version_str}"
        git push origin main
        git push origin main --tags

    - name: Build new version for Linux
      id: build_step
      working-directory: ./data-store
      run: |
        version_str=$(perl -nle 'print $1 if /Version = "([^"]+)"/' "version.go")
        file="data-store-v${version_str}-linux-amd64"
        echo "Building the binary for Linux with version $version_str"
        env GOOS=linux GOARCH=amd64 go build -o $file
        echo "Binary created. Moving it to $HOME"
        mv $file "$HOME/$file"
        echo "file=$file" >> $GITHUB_OUTPUT
    
    - name: Create new release
      id: release_step
      working-directory: ./data-store
      run: |
        version_str=$(perl -nle 'print $1 if /Version = "([^"]+)"/' "version.go")
        file="$HOME/${{ steps.build_step.outputs.file }}"
        echo "Creating a new release for version $version_str"
        gh release create "v${version_str}" $file --title "Release v${version_str}" --generate-notes ${version_str} --target main
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
